@model SupplyChain.App.ViewModels.UserViewModel
@{
    var passwordValue = Model.Id > 0 ? "5273909c02b8ce7ae42a4e21542b3326" : null;
}
<form asp-action="AddEditUser" onsubmit="users.add_user(event)">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="alert alert-danger text-center p-1 d-none">
        <small id="error-message-content"></small>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" required />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" value="@passwordValue" class="form-control" type="password"
                       required onkeyup="users.passwordChanged()" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" type="email" required />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" required />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label">User Role</label>
                @Html.DropDownListFor(m => m.RoleIds,
                new SelectList(Model.Roles.OrderBy(r => r.Id), "Id", "Name"),
                new { @class = "form-control form-control-chosen", multiple = "true" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="IsSupplier" class="control-label"></label>
        <input asp-for="IsSupplier" type="checkbox" />
        <span asp-validation-for="IsSupplier" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="IsPasswordChanged" />
        <input type="submit" value="Save" name="Submit" class="btn btn-outline-primary btn-block" />
    </div>
</form>
<script>
    $(() => {
        chosenInitiation();
        SetSelectedValue();
    });

    function chosenInitiation() {
        $("#RoleIds").chosen({
            no_results_text: "Oops, nothing found!",
            width: "100%",
            placeholder_text_multiple: "type to search"
        });
    }
    function SetSelectedValue() {
        @{
            if (Model.RoleIds is not null)
            {
                <text>
                    var myArray = [@Html.Raw(string.Join(",", Model.RoleIds))];
                    $("#RoleIds").val(myArray).trigger("chosen:updated");
                </text>
            }
        }
    }
</script>

